version: "3.9"
services:
  albert_mosquitto:
    container_name: albert_mosquitto
    image: eclipse-mosquitto:1.6.12
    volumes:
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./mosquitto/passwords.txt:/mosquitto/config/passwords.txt

  dakota_mosquitto:
    container_name: dakota_mosquitto
    image: eclipse-mosquitto:1.6.12
    volumes:
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./mosquitto/passwords.txt:/mosquitto/config/passwords.txt

  tiffany_mosquitto:
    container_name: tiffany_mosquitto
    image: eclipse-mosquitto:1.6.12
    volumes:
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./mosquitto/passwords.txt:/mosquitto/config/passwords.txt

  tommy_mosquitto:
    container_name: tommy_mosquitto
    image: eclipse-mosquitto:1.6.12
    volumes:
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./mosquitto/passwords.txt:/mosquitto/config/passwords.txt


  influxdb:
    image: influxdb:2.4.0
    ports:
      - "8086:8086"
    container_name: influxDB
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=1234567890
      - DOCKER_INFLUXDB_INIT_ORG=udl
      - DOCKER_INFLUXDB_INIT_BUCKET=iotproject
    volumes:
      - ./influxdb_docker/influx-data:/var/lib/influxdb2


  zookeeper:
    image: docker.io/bitnami/zookeeper:3.8
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: docker.io/bitnami/kafka:3.3
    container_name: kafka
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - ALLOW_ANONYMOUS_LOGIN=yes
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--bootstrap-server", "kafka:9092", "--list"]
      interval: 2s
      timeout: 25s
      retries: 15
      
  #--------------------------------------------- Kafka processors ------------------------------------------------------

  save-processor:
    build:
      context: ./Kafka/save-processor
      dockerfile: Dockerfile
    environment:
      - DOCKER_INFLUXDB_INIT_BUCKET=iotproject
      - DOCKER_INFLUXDB_INIT_ORG=udl
      - DOCKER_INFLUXDB_INIT_URL=http://influxdb:8086
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=1234567890
      - DOCKER_INFLUXDB_INIT_TOKEN=ZlGqZ7SUhQksJLjOZNkJWpk-rPPeS857BQkbUiI3a8p9HdJYOCpJDNgh1KR6t3oRKmlR53_rmKepgBRbM1SE7g==
      - DOCKER_KAFKA_URL=kafka:9092
      - GROUP_ID=save-consumer-group
    depends_on:
      kafka-topic-creator:
        condition: service_completed_successfully
      influxdb:
        condition: service_started
    deploy:
      replicas: 6


  clean-processor:
    build:
      context: ./Kafka/clean-processor
      dockerfile: Dockerfile
    environment:
      - DOCKER_KAFKA_INIT_TOKEN=kafka:9092
    depends_on:
      kafka-topic-creator:
        condition: service_completed_successfully
    deploy:
      replicas: 3


  actuator-processor:
    build:
      context: ./Kafka/actuate-processor
      dockerfile: Dockerfile
    environment:
      - DOCKER_KAFKA_INIT_TOKEN=kafka:9092
      - MQTT_ALBERT=albert_mosquitto
      - MQTT_TIFFANY=tiffany_mosquitto
      - MQTT_DAKOTA=dakota_mosquitto
      - MQTT_TOMMY=tommy_mosquitto
    depends_on:
      kafka-topic-creator:
        condition: service_completed_successfully
      albert_mosquitto:
        condition: service_started
    deploy:
      replicas: 3


  kafka-topic-creator:
    build:
      context: ./Kafka/topic-partition-creator
      dockerfile: Dockerfile
    container_name: kafka-topic-creator
    environment:
      - DOCKER_KAFKA_INIT_TOKEN=kafka:9092
      - CLEAN_DATA_PARTITIONS=6
      - RAW_DATA_PARTITIONS=6
    depends_on:
      kafka:
        condition: service_healthy

  #-------------------------------------------------Albert----------------------------------------------------------
  
  albert-presence:
    build:
      context: ./Sensors/presence_sensor
      dockerfile: Dockerfile
    container_name: albert_presence_sensor
    environment:
      - MQTT_HOST=albert_mosquitto
      - DOCKER_KAFKA_INIT_TOKEN=kafka:9092
    depends_on:
      kafka-topic-creator:
        condition: service_completed_successfully
      albert_mosquitto:
        condition: service_started

  albert-temperature:
    build:
      context: ./Sensors/temperature_sensor
      dockerfile: Dockerfile
    container_name: albert_temp_sensor
    environment:
      - MQTT_HOST=albert_mosquitto
      - DOCKER_KAFKA_INIT_TOKEN=kafka:9092
    depends_on:
      kafka-topic-creator:
        condition: service_completed_successfully
      albert_mosquitto:
        condition: service_started

  albert-gateway:
    build:
      context: ./Gateways
      dockerfile: Dockerfile
    container_name: albert_gateway
    environment:
      - MQTT_HOST=albert_mosquitto
      - USER=albert
      - DOCKER_KAFKA_INIT_TOKEN=kafka:9092
    depends_on:
      kafka-topic-creator:
        condition: service_completed_successfully
      albert_mosquitto:
        condition: service_started

  albert-heat-pump:
    build:
      context: ./Actuators/heat_pump
      dockerfile: Dockerfile
    container_name: albert_heat_pump
    environment:
      - MQTT_HOST=albert_mosquitto
    depends_on:
      - albert_mosquitto

  albert-light-bulb:
    build:
      context: ./Actuators/light_bulb
      dockerfile: Dockerfile
    container_name: albert_light_bulb
    environment:
      - MQTT_HOST=albert_mosquitto
    depends_on:
      - albert_mosquitto

  #-------------------------------------------------Dakota----------------------------------------------------------

  dakota-presence:
    build:
      context: ./Sensors/presence_sensor
      dockerfile: Dockerfile
    container_name: dakota_presence_sensor
    environment:
      - MQTT_HOST=dakota_mosquitto
      - DOCKER_KAFKA_INIT_TOKEN=kafka:9092
    depends_on:
      kafka-topic-creator:
        condition: service_completed_successfully
      dakota_mosquitto:
        condition: service_started

  dakota-temperature:
    build:
      context: ./Sensors/temperature_sensor
      dockerfile: Dockerfile
    container_name: dakota_temperature
    environment:
      - MQTT_HOST=dakota_mosquitto
      - DOCKER_KAFKA_INIT_TOKEN=kafka:9092
    depends_on:
      kafka-topic-creator:
        condition: service_completed_successfully
      dakota_mosquitto:
        condition: service_started

  dakota-gateway:
    build:
      context: ./Gateways
      dockerfile: Dockerfile
    container_name: dakota_gateway
    environment:
      - MQTT_HOST=dakota_mosquitto
      - USER=dakota
      - DOCKER_KAFKA_INIT_TOKEN=kafka:9092
    depends_on:
      kafka-topic-creator:
        condition: service_completed_successfully
      dakota_mosquitto:
        condition: service_started

  dakota-heat-pump:
    build:
      context: ./Actuators/heat_pump
      dockerfile: Dockerfile
    container_name: dakota_heat_pump
    environment:
      - MQTT_HOST=dakota_mosquitto
    depends_on:
      - dakota_mosquitto

  dakota-light-bulb:
    build:
      context: ./Actuators/light_bulb
      dockerfile: Dockerfile
    container_name: dakota_light_bulb
    environment:
      - MQTT_HOST=dakota_mosquitto
    depends_on:
      - dakota_mosquitto

  #-------------------------------------------------Tiffany----------------------------------------------------------

  tiffany-presence:
    build:
      context: ./Sensors/presence_sensor
      dockerfile: Dockerfile
    container_name: tiffany_presence
    environment:
      - MQTT_HOST=tiffany_mosquitto
      - DOCKER_KAFKA_INIT_TOKEN=kafka:9092
    depends_on:
      kafka-topic-creator:
        condition: service_completed_successfully
      tiffany_mosquitto:
        condition: service_started

  tiffany-temperature:
    build:
      context: ./Sensors/temperature_sensor
      dockerfile: Dockerfile
    container_name: tiffany_temperature
    environment:
      - MQTT_HOST=tiffany_mosquitto
      - DOCKER_KAFKA_INIT_TOKEN=kafka:9092
    depends_on:
      kafka-topic-creator:
        condition: service_completed_successfully
      tiffany_mosquitto:
        condition: service_started

  tiffany-gateway:
    build:
      context: ./Gateways
      dockerfile: Dockerfile
    container_name: tiffany_gateway
    environment:
      - MQTT_HOST=tiffany_mosquitto
      - USER=tiffany
      - DOCKER_KAFKA_INIT_TOKEN=kafka:9092
    depends_on:
      kafka-topic-creator:
        condition: service_completed_successfully
      tiffany_mosquitto:
        condition: service_started

  tiffany-heat-pump:
    build:
      context: ./Actuators/heat_pump
      dockerfile: Dockerfile
    container_name: tiffany-heatPump
    environment:
      - MQTT_HOST=tiffany_mosquitto
    depends_on:
      - tiffany_mosquitto

  tiffany-light-bulb:
    build:
      context: ./Actuators/light_bulb
      dockerfile: Dockerfile
    container_name: tiffany-lightBulb
    environment:
      - MQTT_HOST=tiffany_mosquitto
    depends_on:
      - tiffany_mosquitto

  #-------------------------------------------------Tommy----------------------------------------------------------

  tommy-presence:
    build:
      context: ./Sensors/presence_sensor
      dockerfile: Dockerfile
    container_name: tommy_presence
    environment:
      - MQTT_HOST=tommy_mosquitto
      - DOCKER_KAFKA_INIT_TOKEN=kafka:9092
    depends_on:
      kafka-topic-creator:
        condition: service_completed_successfully
      tommy_mosquitto:
        condition: service_started

  tommy-temperature:
    build:
      context: ./Sensors/temperature_sensor
      dockerfile: Dockerfile
    container_name: tommy_temperature
    environment:
      - MQTT_HOST=tommy_mosquitto
      - USER=tommy
      - DOCKER_KAFKA_INIT_TOKEN=kafka:9092
    depends_on:
      kafka-topic-creator:
        condition: service_completed_successfully
      tommy_mosquitto:
        condition: service_started

  tommy-gateway:
    build:
      context: ./Gateways
      dockerfile: Dockerfile
    container_name: tommy_gateway
    environment:
      - MQTT_HOST=tommy_mosquitto
      - USER=tommy
      - DOCKER_KAFKA_INIT_TOKEN=kafka:9092
    depends_on:
      kafka-topic-creator:
        condition: service_completed_successfully
      tommy_mosquitto:
        condition: service_started

  tommy-heat-pump:
    build:
      context: ./Actuators/heat_pump
      dockerfile: Dockerfile
    container_name: tommy-heatPump
    environment:
      - MQTT_HOST=tommy_mosquitto
    depends_on:
      - tommy_mosquitto

  tommy-light-bulb:
    build:
      context: ./Actuators/light_bulb
      dockerfile: Dockerfile
    container_name: tommy-lightBulb
    environment:
      - MQTT_HOST=tommy_mosquitto
    depends_on:
      - tommy_mosquitto